<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lycoris.mapper.AccountMapper">

    <resultMap id="BaseResultMap" type="com.lycoris.domain.Account">
        <id property="id" column="id" jdbcType="BIGINT"/>
        <result property="username" column="username" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="CHAR"/>
        <result property="accountType" column="account_type" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="lastUpdate" column="last_update" jdbcType="TIMESTAMP"/>
        <result property="status" column="status" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="Base_Column_List">
        id
        ,username,password,
        account_type,create_time,last_update,
        status
    </sql>

    <sql id="Base_Where">
        <where>
            <if test="id != null">
               and id= #{id,jdbcType=BIGINT}
            </if>
            <if test="username != null and username != ''">
               and username = #{username,jdbcType=VARCHAR}
            </if>
            <if test="password != null and password != ''">
               and password = MD5(#{password,jdbcType=CHAR})
            </if>
            <if test="accountType != null">
               and account_type = #{accountType,jdbcType=INTEGER}
            </if>
            <if test="createTime != null">
               and create_time = #{createTime,jdbcType=TIMESTAMP}
            </if>
            <if test="lastUpdate != null">
               and last_update = #{lastUpdate,jdbcType=TIMESTAMP}
            </if>
            <if test="status != null">
               and status = #{status,jdbcType=INTEGER}
            </if>

        </where>

    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from account
        where id = #{id,jdbcType=BIGINT}
    </select>


    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from account
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.lycoris.domain.Account"
            useGeneratedKeys="true">
        insert into account
        ( id, username, password
        , account_type, create_time, last_update
        , status)
        values ( #{id,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, MD5(#{password,jdbcType=CHAR})
               , #{accountType,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{lastUpdate,jdbcType=TIMESTAMP}
               , #{status,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.lycoris.domain.Account"
            useGeneratedKeys="true">
        insert into account
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="username != null and username != ''">username,</if>
            <if test="password != null and password != ''">password,</if>
            <if test="accountType != null">account_type,</if>
            <if test="createTime != null">create_time,</if>
            <if test="lastUpdate != null">last_update,</if>
            <if test="status != null">status,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id,jdbcType=BIGINT},</if>
            <if test="username != null and username != ''">#{username,jdbcType=VARCHAR},</if>
            <if test="password != null and password != ''">MD5(#{password,jdbcType=CHAR}),</if>
            <if test="accountType != null">#{accountType,jdbcType=INTEGER},</if>
            <if test="createTime != null">#{createTime,jdbcType=TIMESTAMP},</if>
            <if test="lastUpdate != null">#{lastUpdate,jdbcType=TIMESTAMP},</if>
            <if test="status != null">#{status,jdbcType=INTEGER},</if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.lycoris.domain.Account">
        update account
        <set>
            <if test="username != null and username != ''">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null and password != ''">
                password = MD5(#{password,jdbcType=CHAR}),
            </if>
            <if test="accountType != null">
                account_type = #{accountType,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="lastUpdate != null">
                last_update = #{lastUpdate,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.lycoris.domain.Account">
        update account
        set username     = #{username,jdbcType=VARCHAR},
            password     = MD5(#{password,jdbcType=CHAR}),
            account_type = #{accountType,jdbcType=INTEGER},
            create_time  = #{createTime,jdbcType=TIMESTAMP},
            last_update  = #{lastUpdate,jdbcType=TIMESTAMP},
            status       = #{status,jdbcType=INTEGER}
        where id = #{id,jdbcType=BIGINT}
    </update>
<!--add-->
    <select id="selectAll" resultType="com.lycoris.domain.Account">
        select
        <include refid="Base_Column_List"/>
        from account
        <include refid="Base_Where"/>
    </select>
    <select id="selectCount" resultType="java.lang.Integer">
        select
        count(1)
        from account
        <include refid="Base_Where"/>
    </select>
    <select id="selectOneByCondition" resultType="com.lycoris.domain.Account">
        select
        <include refid="Base_Column_List"/>
        from account
        <include refid="Base_Where"/>
        limit 1
    </select>
    <delete id="deleteByIds">
        delete from account
        <where>
            <foreach collection="ids" item="id" open="id in (" separator="," close=")">
                #{id,jdbcType=BIGINT}
            </foreach>
        </where>
    </delete>


</mapper>
