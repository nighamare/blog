<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lycoris.mapper.PraiseMapper">

    <resultMap id="BaseResultMap" type="com.lycoris.domain.Praise">
        <id property="id" column="id" jdbcType="BIGINT"/>
        <result property="praiseForId" column="praise_for_id" jdbcType="BIGINT"/>
        <result property="accountId" column="account_id" jdbcType="BIGINT"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="praiseType" column="praise_type" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="Base_Column_List">
        id
        ,praise_for_id,account_id,
        create_time,praise_type
    </sql>

    <sql id="Base_Where">
        <where>
            <if test="id != null">
                and id=
                #{id,jdbcType=BIGINT}
            </if>
            <if test="praiseForId != null">
                and  praise_for_id =
                #{praiseForId,jdbcType=BIGINT}
            </if>
            <if test="accountId != null">
                and account_id =
                #{accountId,jdbcType=BIGINT}
            </if>
            <if test="createTime != null">
                and create_time =
                #{createTime,jdbcType=TIMESTAMP}
            </if>
            <if test="praiseType != null">
                and praise_type =
                #{praiseType,jdbcType=INTEGER}
            </if>

        </where>
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from praise
        where id = #{id,jdbcType=BIGINT}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from praise
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.lycoris.domain.Praise"
            useGeneratedKeys="true">
        insert into praise
        ( id, praise_for_id, account_id
        , create_time, praise_type)
        values ( #{id,jdbcType=BIGINT}, #{praiseForId,jdbcType=BIGINT}, #{accountId,jdbcType=BIGINT}
               , #{createTime,jdbcType=TIMESTAMP}, #{praiseType,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.lycoris.domain.Praise"
            useGeneratedKeys="true">
        insert into praise
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id
            ,</if>
            <if test="praiseForId != null">praise_for_id
            ,</if>
            <if test="accountId != null">account_id
            ,</if>
            <if test="createTime != null">create_time
            ,</if>
            <if test="praiseType != null">praise_type
            ,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id,jdbcType=BIGINT}
            ,</if>
            <if test="praiseForId != null">#{praiseForId,jdbcType=BIGINT}
            ,</if>
            <if test="accountId != null">#{accountId,jdbcType=BIGINT}
            ,</if>
            <if test="createTime != null">#{createTime,jdbcType=TIMESTAMP}
            ,</if>
            <if test="praiseType != null">#{praiseType,jdbcType=INTEGER}
            ,</if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.lycoris.domain.Praise">
        update praise
        <set>
            <if test="praiseForId != null">
                praise_for_id
                =
                #{praiseForId,jdbcType=BIGINT},
            </if>
            <if test="accountId != null">
                account_id
                =
                #{accountId,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                create_time
                =
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="praiseType != null">
                praise_type
                =
                #{praiseType,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.lycoris.domain.Praise">
        update praise
        set praise_for_id = #{praiseForId,jdbcType=BIGINT},
            account_id    = #{accountId,jdbcType=BIGINT},
            create_time   = #{createTime,jdbcType=TIMESTAMP},
            praise_type   = #{praiseType,jdbcType=INTEGER}
        where id = #{id,jdbcType=BIGINT}
    </update>
    <!--add-->
    <select id="selectAll" resultType="com.lycoris.domain.Praise">
        select
        <include refid="Base_Column_List"/>
        from praise
        <include refid="Base_Where"/>
    </select>
    <select id="selectCount" resultType="java.lang.Integer">
        select
        count(1)
        from praise
        <include refid="Base_Where"/>
    </select>
    <select id="selectOneByCondition" resultType="com.lycoris.domain.Praise">
        select
        <include refid="Base_Column_List"/>
        from praise
        <include refid="Base_Where"/>
        limit 1
    </select>
    <select id="selectAllByPage" resultType="com.lycoris.dto.PraiseInfo">
        select
        p.id,
        p.praise_for_id,
        p.account_id,
        p.praise_type,
        p.create_time,
        a.nickname,
        a.avatar
        from praise p
        left join account_info a
        on p.account_id = a.account_id
        <where>
            <if test="praiseForId != null">
                and p.praise_for_id
                =
                #{praiseForId,jdbcType=BIGINT},
            </if>
            <if test="id != null">
                and p.id
                =
                #{id,jdbcType=BIGINT}
            </if>
            <if test="accountId != null">
                and p.account_id
                =
                #{accountId,jdbcType=BIGINT}
            </if>
            <if test="praiseType != null">
                and p.praise_type
                =
                #{praiseType,jdbcType=INTEGER}
            </if>
            <if test="nickname != null and nickname !=''">
                and a.nickname
                like concat('%',
                #{nickname},
                '%'
                )
            </if>
        </where>
    </select>
    <select id="selectPraiseList" resultType="com.lycoris.domain.Praise">
        select
        <include refid="Base_Column_List"/>
        from praise
        <where>
            account_id=#{accountId,jdbcType=BIGINT}
            <foreach collection="ids" item="id" open="and praise_for_id in (" separator="," close=")">
                #{id,jdbcType=BIGINT}
            </foreach>
        </where>
    </select>
    <delete id="deleteByIds">
        delete from praise
        <where>
            <foreach collection="ids" item="id" open="id in (" separator="," close=")">
                #{id,jdbcType=BIGINT}
            </foreach>
        </where>
    </delete>

</mapper>
